{"version":3,"sources":["assets/images/loader.svg","components/Form/User.tsx","UseOnClickOutside.ts","components/Form/Form.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Form/Form.module.css"],"names":["User","props","onClick","onUserClick","className","styles","user","selected","onMouseOver","onUserMouseOver","src","photo","user_photo","user_name","name","username","useOnClickOutside","ref","handler","useEffect","listener","event","el","current","contains","target","document","addEventListener","removeEventListener","Form","useState","isFetching","setIsFetching","inputText","setInputText","usersList","setUsersList","selectedUser","setSelectedUser","isFormOpened","setFormOpened","useRef","fetchUsers","searchText","a","fetch","response","json","newUsersList","map","u","id","userPhotos","i","length","thumbnailUrl","filter","toLowerCase","indexOf","console","log","search_form","onKeyDown","e","index","key","findIndex","newIndex","s","type","placeholder","value","onChange","onFocus","users_list","loader","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.bbe9e9d3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loader.336a9381.svg\";","import React from \"react\";\r\nimport styles from \"./Form.module.css\"\r\n\r\nexport interface IUser {\r\n    id: number,\r\n    name: string,\r\n    username: string,\r\n    photo?: string,\r\n\r\n    onUserClick?: () => void,\r\n    onUserMouseOver?: () => void,\r\n    selected?: boolean\r\n}\r\n\r\nfunction User(props: IUser) {\r\n    return (\r\n        <div\r\n            onClick={props.onUserClick}\r\n            className={`${styles.user}${(props.selected) ? \" \" + styles.selected : \"\"}`}\r\n            onMouseOver={props.onUserMouseOver}\r\n        >\r\n            <img src={props.photo} className={styles.user_photo} />\r\n            <div className={styles.user_name}>\r\n                <div>{props.name}</div>\r\n                <small>@{props.username}</small>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;\r\n\r\n\r\n","import { useEffect, RefObject } from 'react'\r\n\r\ntype AnyEvent = MouseEvent | TouchEvent\r\n\r\nfunction useOnClickOutside<T extends HTMLElement = HTMLElement>(\r\n  ref: RefObject<T>,\r\n  handler: (event: AnyEvent) => void,\r\n) {\r\n  useEffect(() => {\r\n    const listener = (event: AnyEvent) => {\r\n      const el = ref?.current\r\n\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!el || el.contains(event.target as Node)) {\r\n        return\r\n      }\r\n\r\n      handler(event)\r\n    }\r\n\r\n    document.addEventListener(`mousedown`, listener)\r\n    document.addEventListener(`touchstart`, listener)\r\n\r\n    return () => {\r\n      document.removeEventListener(`mousedown`, listener)\r\n      document.removeEventListener(`touchstart`, listener)\r\n    }\r\n\r\n    // Reload only if ref or handler changes\r\n  }, [ref, handler])\r\n}\r\n\r\nexport default useOnClickOutside","import React, { useState, useRef } from \"react\";\r\nimport styles from \"./Form.module.css\"\r\nimport loader from \"../../assets/images/loader.svg\"\r\nimport User, {IUser} from \"./User\"\r\nimport * as axios from \"axios\"\r\nimport useOnClickOutside from \"../../UseOnClickOutside\"\r\n\r\nfunction Form() {\r\n\r\n    const [isFetching, setIsFetching] = useState(false)\r\n    const [inputText, setInputText] = useState(\"\")\r\n    const [usersList, setUsersList] = useState([])\r\n    const [selectedUser, setSelectedUser] = useState(-1)\r\n    const [isFormOpened, setFormOpened] = useState(false)\r\n\r\n    const ref = useRef(null);\r\n    const scrollRef = useRef(null)\r\n\r\n    useOnClickOutside(ref, () => {console.log(\"shit\"); setFormOpened(false)});\r\n\r\n    async function fetchUsers(searchText?: string) {\r\n        setIsFetching(true)\r\n        let response = await fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n        let newUsersList = (await response.json()).map((u: IUser) => ({\r\n            id: u.id,\r\n            name: u.name,\r\n            username: u.username,\r\n        }))\r\n        \r\n        response = await fetch(\"https://jsonplaceholder.typicode.com/photos\")\r\n        let userPhotos = await response.json()\r\n        for (let i = 0; i < newUsersList.length; i++) {\r\n            newUsersList[i].photo = userPhotos[i].thumbnailUrl\r\n        }\r\n\r\n        if (searchText) {\r\n            //Это имитация поиска, по идее слово для поиска должно передаваться в get параметре\r\n            //но в API нет такой возможности\r\n            newUsersList = newUsersList.filter((u: IUser) => (\r\n                u.username.toLowerCase().indexOf(searchText.toLowerCase()) !== -1 ||\r\n                u.name.toLowerCase().indexOf(searchText.toLowerCase()) !== -1\r\n            ))\r\n        }\r\n        \r\n        setUsersList(newUsersList)\r\n        setIsFetching(false)\r\n        setSelectedUser(-1)\r\n    }\r\n\r\n    return (\r\n        <div ref={ref} className={styles.search_form} onKeyDown={(e) => {\r\n            let index: number\r\n            switch(e.key) {\r\n                case \"ArrowDown\": \r\n                    index = usersList.findIndex((u: IUser) => u.id === selectedUser)                       \r\n                    setSelectedUser((usersList[(index + 1) % usersList.length] as IUser).id)\r\n                    return\r\n                case \"ArrowUp\":\r\n                    index = usersList.findIndex((u: IUser) => u.id === selectedUser)\r\n                    const newIndex: number = (index > 0) ? index - 1 : usersList.length - 1\r\n                    setSelectedUser((usersList[newIndex] as IUser).id)\r\n                    return\r\n                case \"Enter\": \r\n                    index = usersList.findIndex((u: IUser) => u.id === selectedUser)\r\n                    if (index === -1) return\r\n                    const s: IUser = usersList[index]\r\n                    setInputText(s.name)\r\n                    setFormOpened(false)                \r\n                    return\r\n\r\n                default: return\r\n            }\r\n        }}\r\n        >\r\n            <input type=\"text\" placeholder=\"Search\" value={inputText}\r\n                onChange={async (e) => {\r\n                    if (e.target.value === inputText) return\r\n                    setInputText(e.target.value)\r\n                    setFormOpened(true)\r\n                    await fetchUsers(e.target.value)\r\n                }}\r\n                onFocus={async (e) => { await fetchUsers(e.target.value) }}\r\n                onClick={() => { setFormOpened(true) }}\r\n            />\r\n            { (isFormOpened) ?\r\n                <div className={styles.users_list}>\r\n                    {\r\n                        (isFetching) ?\r\n                            <img src={loader} className={styles.loader} />\r\n                        :\r\n                            usersList.map( (u: IUser) =>\r\n                                <User\r\n                                    {...u}\r\n                                    key={u.id}\r\n                                    selected={u.id === selectedUser}\r\n                                    onUserClick={() => {\r\n                                        console.log(\"shit\")\r\n                                        setInputText(u.name)\r\n                                        setFormOpened(false)\r\n                                    }}\r\n                                    onUserMouseOver={() => {\r\n                                        setSelectedUser(u.id)\r\n                                    }}\r\n                                />\r\n                            )\r\n                    }\r\n                </div>\r\n            : \"\" }            \r\n        </div>\r\n    )\r\n\r\n}\r\n        \r\n\r\n    \r\n\r\n\r\nexport default Form","import React from 'react';\nimport logo from './logo.svg';\nimport Form from \"./components/Form/Form\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <div className=\"form_container\">\n            <Form />\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_form\":\"Form_search_form__2kI5K\",\"users_list\":\"Form_users_list__Py16I\",\"loader\":\"Form_loader__wMAth\",\"spin\":\"Form_spin__269cw\",\"user\":\"Form_user__3hyIf\",\"selected\":\"Form_selected__3M9w2\",\"user_photo\":\"Form_user_photo__3_gwh\",\"user_name\":\"Form_user_name__3ziD8\"};"],"sourceRoot":""}